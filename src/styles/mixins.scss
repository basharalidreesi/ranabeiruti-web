@charset "UTF-8";

@mixin tag($hover: true, $border-color: var(--color-3)) {
	display: block;
	padding-block: 0.1875rem;
	padding-inline: 0.5625rem;
	border-radius: 9999px;
	border: 1px solid $border-color;
	transition: background-color 0.125s;
	@if $hover == true {
		@media (any-hover: hover) {
			&:hover {
				background-color: var(--color-6);
			}
		}
	}
}

@mixin hover-text($hover-color: var(--color-3)) {
	transition: color 0.125s;
	@media (any-hover: hover) {
		&:hover {
			color: $hover-color;
		}
	}
}

@mixin ellipsis() {
	overflow: hidden;
	overflow: clip;
	white-space: nowrap;
	text-overflow: ellipsis;
}

@mixin ellipsis-multiline($lines: 3) {
	display: -webkit-box;
	-webkit-line-clamp: $lines;
	-webkit-box-orient: vertical;
	overflow: hidden;
	overflow: clip;
}

@mixin polka-dot-background($density: 2) {
	background-image: radial-gradient(var(--color-4) 1px, transparent 1px), radial-gradient(var(--color-4) 1px, var(--color-7) 1px);
	background-size: calc(1.5rem / $density) calc(1.5rem / $density);
	background-position: 0 0, calc(1.5rem / ($density * 2)) calc(1.5rem / ($density * 2));
}

@mixin stroke($color: var(--color-7)) {
	@supports (-webkit-text-stroke: 0.5em $color) {
		position: relative;
		z-index: 0;
		&::before {
			content: attr(data-content);
			position: absolute;
			left: 0;
			z-index: -1;
			-webkit-text-stroke: 0.5em $color;
		}
	}
}

@mixin link() {
	background-image: linear-gradient(to bottom, var(--color-4), var(--color-4));
	background-size: 1px 2px;
	background-repeat: repeat-x;
	background-position: 0 100%;
	// color: var(--color-1);
}

@mixin comma-separated-list($separator: ",", $connector: "and") {
	& {
		display: inline;
	}
	&:not(:first-of-type:nth-last-of-type(2)):not(:last-of-type)::after {
		content: "#{$separator} ";
	}
	&:last-of-type:not(:first-of-type)::before {
		content: " #{$connector} ";
	}
}