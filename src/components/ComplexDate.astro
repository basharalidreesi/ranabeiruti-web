---
export type ComplexDateFormats = "fullDate" | "yearWithMonth" | "yearOnly";

export type ComplexDateProps = {
	startDate: string;
	endDate: string;
	hasDuration: boolean;
	isOngoing: boolean;
	dateFormat: ComplexDateFormats;
};

type Props = {
	source: ComplexDateProps;
	length?: "long" | "short";
	format?: ComplexDateFormats;
};

const {
	source,
	length,
	format,
} = Astro.props;

function renderComplexDate(complexDate: ComplexDateProps) {
	if (!complexDate || !complexDate?.startDate || (!format && !complexDate?.dateFormat)) { return null; };
	const startDate = complexDate.startDate;
	const endDate = complexDate.endDate;
	const hasDuration = complexDate.hasDuration;
	const isOngoing = complexDate.isOngoing;
	const dateFormat = format || complexDate.dateFormat;
	const getDateComponents = (isoDate: string | number | Date) => {
		const date = new Date(isoDate);
		return {
			day: date.getDate(),
			month: date.getMonth(),
			year: date.getFullYear(),
		};
	};
	const formatMonth = (monthIndex: number) => {
		const longMonthNames = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];
		const shortMonthNames = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept", "Oct", "Nov", "Dec"];
		return length === "short" ? shortMonthNames[monthIndex] : longMonthNames[monthIndex];
	};
	const startComponents = getDateComponents(startDate);
	const endComponents = endDate ? getDateComponents(endDate) : null;
	switch (dateFormat) {
		case "fullDate":
			if (hasDuration && endDate && !isOngoing) {
				if (
					startComponents.year === endComponents.year
					&& startComponents.month === endComponents.month
					&& startComponents.day === endComponents.day
				) {
					return `<span class="date-baseline">${startComponents.day} ${formatMonth(startComponents.month)} </span><span class="date-year">${startComponents.year}</span>`;
				};
				if (
					startComponents.year === endComponents.year
					&& startComponents.month === endComponents.month
					&& startComponents.day !== endComponents.day
				) {
					return `<span class="date-baseline">${startComponents.day}–${endComponents.day} ${formatMonth(startComponents.month)} </span><span class="date-year">${startComponents.year}</span>`;
				};
				if (
					startComponents.year === endComponents.year
					&& startComponents.month !== endComponents.month
					&& startComponents.day !== endComponents.day
				) {
					return `<span class="date-baseline">${startComponents.day} ${formatMonth(startComponents.month)} – ${endComponents.day} ${formatMonth(endComponents.month)} </span><span class="date-year">${startComponents.year}</span>`;
				};
				return `<span class="date-baseline">${startComponents.day} ${formatMonth(startComponents.month)} </span><span class="date-year">${startComponents.year} – </span><span class="date-baseline">${endComponents.day} ${formatMonth(endComponents.month)} </span><span class="date-year">${endComponents.year}</span>`;
			};
			if (hasDuration && isOngoing) {
				return `<span class="date-baseline">${startComponents.day} ${formatMonth(startComponents.month)} </span><span class="date-year">${startComponents.year} – Present</span>`;
			};
			return `<span class="date-baseline">${startComponents.day} ${formatMonth(startComponents.month)} </span><span class="date-year">${startComponents.year}</span>`;
		case "yearWithMonth":
			if (hasDuration && endDate && !isOngoing) {
				if (startComponents.year === endComponents.year && startComponents.month === endComponents.month) {
					return `<span class="date-baseline">${formatMonth(startComponents.month)} </span><span class="date-year">${startComponents.year}</span>`;
				};
				if (startComponents.year === endComponents.year) {
					return `<span class="date-baseline">${formatMonth(startComponents.month)} – ${formatMonth(endComponents.month)} </span><span class="date-year">${startComponents.year}</span>`;
				};
				return `<span class="date-baseline">${formatMonth(startComponents.month)} </span><span class="date-year">${startComponents.year} – </span><span class="date-baseline">${formatMonth(endComponents.month)} </span><span class="date-year">${endComponents.year}</span>`;
			};
			if (hasDuration && isOngoing) {
				return `<span class="date-baseline">${formatMonth(startComponents.month)} </span><span class="date-year">${startComponents.year} – Present</span>`;
			};
			return `<span class="date-baseline">${formatMonth(startComponents.month)} </span><span class="date-year">${startComponents.year}</span>`;
		case "yearOnly":
			if (hasDuration && endDate && !isOngoing) {
				if (startComponents.year === endComponents.year) {
					return `<span class="date-year">${startComponents.year}</span>`;
				};
				return `<span class="date-year">${startComponents.year} – ${endComponents.year}</span>`;
			};
			if (hasDuration && isOngoing) {
				return `<span class="date-year">${startComponents.year} – Present</span>`;
			};
			return `<span class="date-year">${startComponents.year}</span>`;
		default:
			return null;
	};
};
---

<time
	datetime={source && source.startDate && source.dateFormat ? (
		source.dateFormat === "yearWithMonth" ? source.startDate.split("-").splice(0, -1).join("-")
		: source.dateFormat === "yearOnly" ? source.startDate.split("-")[0]
		: source.startDate
	) : null}
	set:html={renderComplexDate(source)}
/>