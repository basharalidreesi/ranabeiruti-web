---
import Image from "@components/Image.astro";
import RichText from "@components/RichText.astro";
import type { SanityImageMetadataObject } from "@lib/types.astro";
import type { SanityImageObject } from "@sanity/image-url/lib/types/types";
import type { TypedObject } from "astro-portabletext/types";
import type { CaptionPlacements, VerticalAlignments } from "@components/PageCmps/PageBuilder.astro";

type Props = {
	source: SanityImageObject & SanityImageMetadataObject & {
		caption: TypedObject[];
		captionPlacement: CaptionPlacements;
		captionVerticalAlignment: VerticalAlignments;
		imageRatio: number;
		captionRatio: number;
	};
	sizes?: string;
};

const {
	source,
	sizes,
} = Astro.props;
---

<figure data-caption-placement={source.captionPlacement || "bottom"}>
	<Image
		source={source}
		style={{
			"--image-flex-ratio": Math.max(source.imageRatio, 1) || 1,
			"--image-vertical-alignment": "flex-start",
		}}
		sizes={sizes}
	/>
	{source.caption && source.caption?.length !== 0
		? (
			<figcaption style={{
				"--caption-flex-ratio": Math.max(source.captionRatio, 1) || 1,
				"--caption-vertical-alignment": {
						"top": "flex-start",
						"middle": "center",
						"bottom": "flex-end",
						"baseline": "baseline",
				}[(source.captionPlacement === "left" || source.captionPlacement === "right") && source.captionVerticalAlignment] || null,
			}}>
				<RichText source={source.caption} />
			</figcaption>
		)
		: null
	}
</figure>

<style lang="scss" is:global>
	figure {
		& {
			display: flex;
		}
		picture {
			flex: var(--image-flex-ratio);
			align-self: var(--image-vertical-alignment);
		}
		figcaption {
			flex: var(--caption-flex-ratio);
			align-self: var(--caption-vertical-alignment);
			color: var(--color-2)
		}
		&:where([data-caption-placement="left"]) {
			flex-flow: row-reverse nowrap;
			gap: var(--spacer-200);
		}
		&:where([data-caption-placement="top"]) {
			flex-flow: column-reverse nowrap;
			gap: calc(var(--spacer-100) + 0.15em);
		}
		&:where([data-caption-placement="right"]) {
			flex-flow: row nowrap;
			gap: var(--spacer-200);
		}
		&:where([data-caption-placement="bottom"]) {
			flex-flow: column nowrap;
			gap: calc(var(--spacer-100) + 0.15em);
		}
		@media (max-width: 768px) {
			& {
				flex-flow: column nowrap;
				gap: calc(var(--spacer-100) + 0.15em);
			}
			picture {
				flex: unset;
				align-self: unset;
			}
			figcaption {
				flex: unset;
				align-self: unset;
			}
		}
	}
</style>