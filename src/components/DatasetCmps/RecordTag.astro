---
import { LOCALES } from "@lib/locales";
import type { RecordProps, TagNames } from "@lib/types.astro";

type Props = {
	record: RecordProps;
	tags: TagNames[];
	withMissing?: boolean;
};

const {
	record,
	tags,
	withMissing = false,
} = Astro.props;

const hasTypeTags = tags.includes("types") && (record.type === "project" || record.type === "publication") && (withMissing || (record.types && record.types.length !== 0));
const hasSubjectTags = tags.includes("subjects") && (record.type === "project" || record.type === "publication") && (withMissing || (record.subjects && record.subjects.length !== 0));
const hasCollectionTags = tags.includes("collections") && (record.type === "project" || record.type === "publication") && (withMissing || (record.collections && record.collections.length !== 0));
const hasLocationTags = tags.includes("locations") && (record.type === "project" || record.type === "publication") && (withMissing || (record.locations && record.locations.length !== 0));
---

{tags && tags.length !== 0 && (hasTypeTags || hasSubjectTags || hasCollectionTags || hasLocationTags) && (
	<dl class={tags.length === 1 ? `record-${tags[0]}` : "record-tags"} data-has-value={((!hasTypeTags || !record.types || record.types.length === 0) && (!hasSubjectTags || !record.subjects || record.subjects.length === 0) && (!hasCollectionTags || !record.collections || record.collections.length === 0) && (!hasLocationTags || !record.locations || record.locations.length === 0)) && "false"}>
		{tags.map((tag) => {
			switch (tag) {
				case "types": return hasTypeTags && (<>
					<dt data-has-value={(hasTypeTags && (!record.types || record.types.length === 0)) && "false"}>Types:</dt>
					{record.types && record.types.length !== 0 && record.types.map((type) => (
						<dd>{type.name?.trim()}</dd>
					)) || (
						<dd aria-hidden="true">∅</dd>
					)}
				</>);
				case "subjects": return hasSubjectTags && (<>
					<dt data-has-value={(!record.subjects || record.subjects.length === 0) && "false"}>Subjects:</dt>
					{record.subjects && record.subjects.length !== 0 &&record.subjects.map((subject) => (
						<dd>{subject.name?.trim()}</dd>
					)) || (
						<dd aria-hidden="true">∅</dd>
					)}
				</>);
				case "collections": return hasCollectionTags && (<>
					<dt data-has-value={(!record.collections || record.collections.length === 0) && "false"}>Collections:</dt>
					{record.collections && record.collections.length !== 0 && record.collections.map((collection) => (
						<dd>{collection.name?.trim()}</dd>
					)) || (
						<dd aria-hidden="true">∅</dd>
					)}
				</>);
				case "locations": return hasLocationTags && (<>
					<dt data-has-value={(!record.locations || record.locations.length === 0) && "false"}>Locations:</dt>
					{record.locations && record.locations.length !== 0 && record.locations.map((location) => {
						const locationName = location.name?.trim();
						const localeName = LOCALES.find((locale) => locale.value === location.locale)?.title;
						return (
							<dd>
								<span class="record-location-var1">{`${locationName}${localeName && `, ${localeName}`}`}</span>
								<span class="record-location-var2">{`${locationName}${localeName && ` (${localeName})`}`}</span>
							</dd>
						);
					}) || (
						<dd aria-hidden="true">∅</dd>
					)}
				</>);
				default: return null;
			};
		})}
	</dl>
)}
